general:
    daemon: true
    sleep: 900
    state_path: state.sqlite3

credentials:
  - name: twitter-auth
    # https://dev.twitter.com/oauth/overview/application-owner-access-tokens
    token:
    token_key:
    con_secret_key: 
    con_secret: 

  - name: threatkb-auth
    url: http://mythreatkb
    token: MYTOKEN
    secret_key: MYKEY

  - name: aws-auth
    aws_access_key_id: MY_KEY
    aws_secret_access_key: MY_SECRET
    aws_region: MY_REGION

sources:
  - name: twitter-inquest-c2-list
    module: twitter
    credentials: twitter-auth
    # https://dev.twitter.com/rest/reference/get/lists/statuses
    owner_screen_name: InQuest
    slug: c2-feed

  - name: twitter-open-directory
    module: twitter
    credentials: twitter-auth
    # https://developer.twitter.com/en/docs/tweets/search/api-reference/get-search-tweets.html
    q: '"open directory" #malware'

  - name: twitter-inquest-timeline
    module: twitter
    credentials: twitter-auth
    # https://developer.twitter.com/en/docs/tweets/timelines/api-reference/get-statuses-user_timeline
    screen_name: InQuest

  - name: rss-myiocfeed
    module: rss
    url: https://example.com/rss.xml
    feed_type: messy

operators:
  - name: csv
    # Write artifacts to a CSV file
    module: csv
    filename: output.csv
    
  - name: mythreatkb
    # Send artifacts to a ThreatKB instance
    module: threatkb
    credentials: threatkb-auth
    allowed_sources: [twitter-inquest-c2-list, rss-.*]
    state: Inbox

  - name: inquest-threatcrawler
    module: sqs
    credentials: aws-auth
    allowed_sources: [twitter-open-directory]
    filter: is_domain
    artifact_types: [URL]
    queue_name: research-crawl-queue
    domain: {domain}
    url: {url}
    source_type: url
    download_path: /var/crawler/ingestor
    source_type_tags: dir
