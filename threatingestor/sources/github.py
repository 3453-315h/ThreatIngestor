import datetime
import json
import requests

from threatingestor.sources import Source
import threatingestor.artifacts

SEARCH_URL = "https://api.github.com/search/repositories"

class Plugin(Source):
  
    def __init__(self, name,  **kwargs):
        self.auth = (kwargs['username'], kwargs['token'])
        self.name = name
        self.search = kwargs['search']

    def make_requests(self, url, params, auth):
        # Iterates through pages of results from query
        isEmpty = False
        pageNum= 1
        artifact_list= []
        while(not isEmpty):

            params["page"] = str(pageNum)
            response = requests.get(url, params=params, auth=self.auth)
            print(response.links)
            pageNum+=1
            if(response.links.get('next') is None):
                print("No more results")
                isEmpty=True
            if("message" in response.json()):
                print("Github API Request Error: "+response.json()['message'])
                isEmpty=True
            else:

                for repo in response.json()['items']:
                    title = "Manual Task: GitHub {u}".format(u=repo['full_name'])
                    description = 'URL: {u}\nTask autogenerated by ThreatIngestor from source: {s}'.format(s=self.name, u=repo['html_url'])
                    artifact = threatingestor.artifacts.Task(title, self.name, reference_link=repo['html_url'],
                                                             reference_text=description)
                    artifact_list.append(artifact)

        return artifact_list

    def run(self, saved_state):
        # if no saved_state, search max 1 day ago
        if not saved_state:
            print("No saved State")
            saved_state = (datetime.datetime.utcnow() - datetime.timedelta(days=10)).isoformat()[:-7] + 'Z'

        params = {
                'q': "{search} created:>={timestamp}".format(search=self.search, timestamp=saved_state),
                "page" : "",
                "per_page": "100"
        }

        
        saved_state = datetime.datetime.utcnow().isoformat()[:-7] + 'Z'
        artifact_list = self.make_requests(SEARCH_URL, params, self.auth)

        return saved_state, artifact_list
